<Project TreatAsLocalProperty="TestReportFileName;DotnetErrorCode">

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    <TestReportFileName>$(MSBuildProjectName)</TestReportFileName>
    <TestReportFileName Condition="'$(TestReportFileName)' == ''">test</TestReportFileName>
  </PropertyGroup>

  <PropertyGroup Condition="'$([System.Text.RegularExpressions.Regex]::IsMatch(`$(TargetFramework)`, `^netcoreapp`))' == 'True'">
    <!-- `dotnet xunit` requires a very explicit runtime version to be set: -->
    <RuntimeFrameworkVersion>2.0.3</RuntimeFrameworkVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="15.7.2" PrivateAssets="All" />
    <PackageReference Include="xunit" Version="2.3.1" PrivateAssets="All" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.3.1" PrivateAssets="All" />
    <DotNetCliToolReference Include="dotnet-xunit" Version="2.3.1" PrivateAssets="All" />
  </ItemGroup>

  <Target Name="Test">
    <!-- See if dotnet CLI is available: -->
    <Exec ContinueOnError="True" Command="dotnet --info">
      <Output TaskParameter="ExitCode" PropertyName="DotnetErrorCode"/>
    </Exec>
    <Warning Condition="'$(DotnetErrorCode)' != '0'" Text="Error in executing dotnet." />

    <Exec Command="dotnet xunit -nobuild -configuration $(Configuration) -noshadow -appveyor -html &quot;$(OutputDirectory)$(TestReportFileName).html&quot; -xml &quot;$(OutputDirectory)$(TestReportFileName).xml&quot;"
          ContinueOnError="false" />
  </Target>

</Project>
